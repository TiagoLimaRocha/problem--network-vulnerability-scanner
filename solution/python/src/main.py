import asyncio
import random

from utils.scan import Vulnerability
from pprint import pprint
from utils.fetch import get_timeout
from utils.scan import process_scan_results

async def main() -> None:
  try:
    data_sources: list[str] = [
      "./mocks/network-vulnerabilities.mock.json",
      "./mocks/server-vulnerabilities.mock.json",
      "./mocks/workstation-vulnerabilities.mock.json"
    ]
    
    results: list[dict] = await asyncio.gather(*[get_timeout(data_source, random.uniform(0.1, 1)) for data_source in data_sources])
    processed_scan: dict[list[Vulnerability]] = await process_scan_results(results)

    pprint(processed_scan)

  except Exception as e:
    pprint(e)

asyncio.run(main())