from enum import Enum
from utils.scan import Vulnerability

class SortPredicateEnum(Enum):
  SEVERITY = "severity"
  ASSET_TYPE = "asset_type"
  ID = "id"

class SortOrderEnum(Enum):
  ASC = "asc"
  DESC = "desc"

async def sort_by(data: list[Vulnerability], pred: SortPredicateEnum, order: SortOrderEnum = SortOrderEnum.DESC) -> dict[list:Vulnerability]:
  sorted_data: list[Vulnerability] = []
  match pred:
    case SortPredicateEnum.SEVERITY:
      sorted_data = sorted(data, key=lambda x: x.severity_score)
    case SortPredicateEnum.ASSET_TYPE:
      sorted_data = sorted(data, key=lambda x: x.asset_type)
    case SortPredicateEnum.ID:
      sorted_data = sorted(data, key=lambda x: x.id)
    case _:
      data

  if order == SortOrderEnum.DESC:
    sorted_data = sorted_data[::-1]

  return { 'vulnerabilities': sorted_data }